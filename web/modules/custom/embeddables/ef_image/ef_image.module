<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\ef\EmbeddableInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;

/**
 * Implements hook_entity_view_alter
 *
 * Images are a bit unusual in that we actually end up rendering the media image
 * entity - that is where the pattern is attached. We need to transmit the
 * editorial options (like section heading) down to the media entity.
 *
 * @param array $build
 * @param \Drupal\Core\Entity\EntityInterface $entity
 * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
 */
function ef_image_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($entity->getEntityTypeId() == 'embeddable' && $entity->bundle() == 'image') {
    if (isset($build['parent_id'])) {
      if (isset($build['#embeddable_reference_options'])) {
        $build['parent_id']['#embeddable_reference_options'] = $build['#embeddable_reference_options'];
      }
      if (isset($build['#ef_contextual_menu'])) {
        $build['parent_id']['#ef_contextual_menu'] = $build['#ef_contextual_menu'];
      }
    }
  }
}

/**
 * Implements hook_dependent_embeddable_generate_BUNDLE_alter().
 */
function ef_image_dependent_embeddable_presave_image_alter(EmbeddableInterface $dependent_embeddable, ContentEntityInterface $parent_entity) {
  $dependent_embeddable->setTitle($parent_entity->label());
}

/**
 * Implements hook_embeddable_contextual_entity_BUNDLE_alter().
 */
function ef_image_embeddable_contextual_entity_image_alter(EmbeddableInterface &$contextual_entity, $view_mode) {
  /** @var \Drupal\media\Entity\Media $image_media */
  $contextual_entity = $contextual_entity->getParentEntity();
}

/**
 * Implements hook_form_BASE_FORM_ID_alter()
 *
 * Avoid presenting an image embeddable 'create' screen
 */
function ef_image_form_embeddable_form_alter(&$form, FormStateInterface $form_state) {

  /** @var EmbeddableInterface $embeddable */
  $embeddable = $form_state->getFormObject()->getEntity();

  if($embeddable->bundle() == 'image') {
    switch ($form_state->getFormObject()->getOperation()) {
      case 'default':
        /** @var \Drupal\Core\Url $url */
        $url = Url::fromRoute('entity.media.add_form', ['media_type' => 'ef_image']);

        // we cannot use the destination helper, as it will cause a loop
        $destination = \Drupal::request()->query->get('destination');

        if (!empty($destination)) {
          $url->setOption('query', ['destination' => $destination]);
        }

        ef_redirect_now($url);
        break;
      case 'edit':
        /** @var \Drupal\media\Entity\Media $media_entity */
        $media_entity = $embeddable->getParentEntity();
        $url = $media_entity->toUrl('edit-form', ['query' => \Drupal::destination()->getAsArray()]);

        ef_redirect_now($url);
        break;
    }

  }

}