<?php

/**
 * Implements hook_theme().
 */
function ef_icon_library_theme() {
  return [
    'icon_library_icons' => [
      'variables' => ['in_use_icons' => []],
    ],
  ];
}

function template_preprocess_icon_library_icons(&$variables) {
  $in_use_icons = $variables['in_use_icons'];

  $inlined_icons = '';

  foreach ($in_use_icons as $in_use_icon) {
    $file_path = $in_use_icon->uri;
    $inlined_icons .= file_get_contents($file_path);
  }
  $variables['inlined_icons'] = $inlined_icons;
}

function ef_icon_library_theme_registry_alter(&$theme_registry) {
  foreach ($theme_registry as $entry_name => $entry) {
    if (strpos($entry_name, 'pattern_') === 0) {
      $theme_registry[$entry_name]['preprocess functions'][] = 'ef_icon_library_preprocess_icon_pattern';
    }
  }
}

function ef_icon_library_preprocess_icon_pattern (array &$variables) {
  /** @var \Drupal\ef_icon_library\IconLibraryInterface $iconLibrary */
  $iconLibrary = \Drupal::service('ef.icon_library');
  $iconLibrary->patternIsBeingRendered ($variables);

}

function ef_icon_library_preprocess_html (&$variables) {
  /** @var \Drupal\ef_icon_library\IconLibraryInterface $iconLibrary */
  $iconLibrary = \Drupal::service('ef.icon_library');

  $icons_in_use = $iconLibrary->getInUseIcons();

  if (count($icons_in_use) > 0) {
    $variables['inlined_svg_icons'] = [
      '#theme' => 'icon_library_icons',
      '#in_use_icons' => $icons_in_use,
    ];
  }
}
