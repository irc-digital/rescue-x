{"version":3,"sources":["base/_reset.scss","rpl.atoms.css","base/_base.scss","rpl.tier-1.scss","abstract/_mixins.scss","../_patterns/01-atoms/01-text/05-paragraph/_rpla-paragraph.scss","../_patterns/01-atoms/01-text/10-heading/_rpla-heading.scss","../_patterns/01-atoms/01-text/25-slug/_rpla-slug.scss","../_patterns/01-atoms/05-buttons/rpla-button.scss","../_patterns/01-atoms/03-links/05-link/rpla-link.scss","rpl.tier-2.scss","../_patterns/01-atoms/03-links/10-link-icon/rpla-link-icon.scss","../_patterns/01-atoms/10-lists/05-unordered/_rpla-unordered-list.scss","../_patterns/01-atoms/07-responsive-title/rpla-responsive-title.scss","../_patterns/01-atoms/15-images/20-icon/_rpla-icon.scss","../_patterns/01-atoms/20-social-share/05-standard/rpla-social-share-default.scss","../_patterns/03-molecules/20-section-heading/rplm-section-heading.scss"],"names":[],"mappings":"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","file":"rpl.atoms.css","sourcesContent":["//------------------------------------\n//    #RESET\n//------------------------------------\n\n//\n// Border-Box http:/paulirish.com/2012/box-sizing-border-box-ftw/\n// /\n* {\n  box-sizing: border-box;\n}\n\n//\n// 1) Zero out margins and padding for elements\n//\nhtml,\nbody,\ndiv,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\nol,\nul,\nli,\nform,\nlegend,\nlabel,\ntable,\nheader,\nfooter,\nnav,\nsection,\nfigure {\n  margin: 0;\n  padding: 0;\n}\n\n//\n// 1) Set HTML5 elements to display: block\n//\nheader,\nfooter,\nnav,\nsection,\narticle,\nfigure {\n  display: block;\n}\n\na {\n  outline: none;\n  text-decoration: none;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: normal;\n}\n// end of file\n","@charset \"UTF-8\";\n* {\n  box-sizing: border-box; }\n\nhtml,\nbody,\ndiv,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\nol,\nul,\nli,\nform,\nlegend,\nlabel,\ntable,\nheader,\nfooter,\nnav,\nsection,\nfigure {\n  margin: 0;\n  padding: 0; }\n\nheader,\nfooter,\nnav,\nsection,\narticle,\nfigure {\n  display: block; }\n\na {\n  outline: none;\n  text-decoration: none; }\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: normal; }\n\nhtml {\n  font-family: akzidenz-grotesk, Arial, Helvetica, sans-serif; }\n\nbody {\n  font-size: 1.125rem;\n  font-weight: 300;\n  letter-spacing: -0.01em;\n  line-height: 1.6;\n  background-color: #f6f6f6;\n  color: #000;\n  min-width: 20rem;\n  width: 100%; }\n  @media only screen and (min-width: 40.0625rem) {\n    body {\n      font-size: 1.25rem;\n      line-height: 1.75; } }\n\na {\n  color: #000; }\n\nimg {\n  height: auto;\n  max-width: 100%; }\n\n.rpla-paragraph {\n  font-size: 1.125rem;\n  font-weight: 300;\n  letter-spacing: -0.01em;\n  line-height: 1.6;\n  margin-bottom: 1rem;\n  max-width: 53.125rem; }\n  @media only screen and (min-width: 40.0625rem) {\n    .rpla-paragraph {\n      font-size: 1.25rem;\n      line-height: 1.75; } }\n  @media only screen and (min-width: 40.0625rem) {\n    .rpla-paragraph {\n      margin-bottom: 1.5rem; } }\n  .rpla-paragraph--lead {\n    font-size: 1.25rem; }\n    @media only screen and (min-width: 40.0625rem) {\n      .rpla-paragraph--lead {\n        font-size: 1.5rem;\n        line-height: 1.6; } }\n\n.rpla-heading--medium {\n  font-size: 1.125rem;\n  font-weight: 700;\n  letter-spacing: -0.03em;\n  line-height: 1.4;\n  margin-bottom: 0.5rem; }\n  @media only screen and (min-width: 40.0625rem) {\n    .rpla-heading--medium {\n      font-size: 1.25rem; } }\n\n.rpla-heading--medium-large {\n  font-size: 1.25rem;\n  font-weight: 700;\n  letter-spacing: -0.03em;\n  line-height: 1.4;\n  margin-bottom: 1rem; }\n  @media only screen and (min-width: 40.0625rem) {\n    .rpla-heading--medium-large {\n      font-size: 1.75rem; } }\n\n.rpla-heading--large {\n  font-size: 1.5rem;\n  font-weight: 700;\n  letter-spacing: -0.03em;\n  line-height: 1.4; }\n  @media only screen and (min-width: 40.0625rem) {\n    .rpla-heading--large {\n      font-size: 2.25rem; } }\n\n.rpla-heading--extra-large {\n  font-size: 1.75rem;\n  font-weight: 700;\n  letter-spacing: -0.03em;\n  line-height: 1.4;\n  margin-bottom: 1rem; }\n  @media only screen and (min-width: 40.0625rem) {\n    .rpla-heading--extra-large {\n      font-size: 2.25rem; } }\n\n.rpla-slug {\n  font-size: 0.875rem;\n  font-weight: 300;\n  line-height: 1.4; }\n  @media only screen and (min-width: 40.0625rem) {\n    .rpla-slug {\n      font-size: 1rem; } }\n  .rpla-slug:not(:last-child) {\n    margin-bottom: 0.5rem; }\n  @media only screen and (min-width: 40.0625rem) {\n    .rpla-slug__slug {\n      display: inline-block; } }\n  .rpla-slug__sub-slug {\n    font-weight: 700;\n    display: inline-block; }\n    @media only screen and (min-width: 40.0625rem) {\n      .rpla-slug__sub-slug {\n        border-left: 1px solid #000;\n        margin-left: 1rem;\n        padding-left: 1rem;\n        padding-right: 1rem; } }\n  .rpla-slug--size-large {\n    font-size: 1.125rem;\n    font-weight: 300;\n    letter-spacing: -0.01em;\n    line-height: 1.6; }\n    @media only screen and (min-width: 40.0625rem) {\n      .rpla-slug--size-large {\n        font-size: 1.25rem;\n        line-height: 1.75; } }\n\n.rpla-button {\n  background-color: #fdc513;\n  display: inline-flex;\n  text-decoration: none; }\n  .rpla-button__icon {\n    height: 24px;\n    width: 24px; }\n  .rpla-button--icon-position-before .rpla-button__text {\n    order: 2; }\n\n.rpla-link:not([class*='rpla-link--style-']):not(.rpla-link--hover-effect-none) {\n  font-weight: 700;\n  border-bottom: 2px solid #fdc513;\n  display: inline; }\n  .rpla-link:not([class*='rpla-link--style-']):not(.rpla-link--hover-effect-none):hover {\n    background-color: #fdc513; }\n\n.rpla-link:not([class*='rpla-link--style-']).rpla-link--hover-effect-none {\n  font-weight: 700;\n  border-bottom: 2px solid #fdc513;\n  display: inline; }\n\n.rpla-link--style-alert {\n  font-weight: 700;\n  border-bottom: 2px solid #ee2d14;\n  display: inline; }\n  .rpla-link--style-alert:hover {\n    color: #ee2d14; }\n\n.rpla-link--style-inverse {\n  font-weight: 700;\n  border-bottom: 2px solid #fff;\n  display: inline; }\n  .rpla-link--style-inverse:hover {\n    background-color: #fff; }\n\n.rpla-link--size-extra-small {\n  font-size: 0.875rem;\n  font-weight: 300;\n  line-height: 1.4; }\n  @media only screen and (min-width: 40.0625rem) {\n    .rpla-link--size-extra-small {\n      font-size: 1rem; } }\n\n.rpla-link-icon {\n  text-decoration: none; }\n  .rpla-link-icon__icon {\n    height: 24px;\n    width: 24px; }\n\n.rpla-unordered-list {\n  font-size: 1.125rem;\n  font-weight: 300;\n  letter-spacing: -0.01em;\n  line-height: 1.6;\n  list-style: none; }\n  @media only screen and (min-width: 40.0625rem) {\n    .rpla-unordered-list {\n      font-size: 1.25rem;\n      line-height: 1.75; } }\n  .rpla-unordered-list--small {\n    font-size: 1rem;\n    font-weight: 300;\n    line-height: 1.4; }\n    @media only screen and (min-width: 40.0625rem) {\n      .rpla-unordered-list--small {\n        font-size: 1.125rem; } }\n  .rpla-unordered-list__item {\n    margin-bottom: 1rem;\n    padding-left: 2rem;\n    text-indent: -.85em; }\n    .rpla-unordered-list__item::before {\n      font-size: 1.5rem;\n      color: #fdc513;\n      content: 'â€¢ ';\n      font-family: Arial;\n      left: -1rem;\n      position: relative;\n      top: 3px; }\n\n.rpla-responsive-title {\n  font-size: 1.5rem;\n  font-weight: 700;\n  letter-spacing: -0.03em;\n  line-height: 1.4;\n  margin-bottom: 1rem; }\n  @media only screen and (min-width: 40.0625rem) {\n    .rpla-responsive-title {\n      font-size: 2.25rem; } }\n  @media only screen and (min-width: 981px) {\n    .rpla-responsive-title {\n      line-height: 1.2; }\n      .rpla-responsive-title--short {\n        font-size: 3.75rem; }\n      .rpla-responsive-title--medium, .rpla-responsive-title--long {\n        font-size: 3.25rem; }\n      .rpla-responsive-title--very-long {\n        font-size: 2.75rem; }\n      .rpla-responsive-title--super-long {\n        font-size: 2.25rem; } }\n\n.rpla-icon {\n  height: 100%;\n  width: 100%; }\n\n.rpla-social-share-standard__link {\n  border: 1px solid #e9e9e9;\n  border-radius: 100%;\n  display: inline-block;\n  height: 3rem;\n  margin-right: 0.5rem;\n  padding: 0.9375rem;\n  width: 3rem; }\n\n.rplm-section-heading {\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 77.5rem;\n  padding-left: 1rem;\n  padding-right: 1rem; }\n  .rplm-section-heading__title {\n    font-size: 1.5rem;\n    font-weight: 700;\n    letter-spacing: -0.03em;\n    line-height: 1.4;\n    border-left: 6px solid #fdc513;\n    display: inline-block;\n    max-width: 75%;\n    padding-bottom: 0.5rem;\n    padding-left: 24px;\n    padding-top: 0.5rem; }\n    @media only screen and (min-width: 40.0625rem) {\n      .rplm-section-heading__title {\n        font-size: 2.25rem; } }\n    @media only screen and (min-width: 40.0625rem) {\n      .rplm-section-heading__title {\n        max-width: 85%; } }\n  .rplm-section-heading__title-icon-wrapper {\n    align-items: center;\n    display: flex;\n    margin-bottom: 1rem; }\n    @media only screen and (min-width: 40.0625rem) {\n      .rplm-section-heading__title-icon-wrapper {\n        margin-bottom: 1.5rem; } }\n  .rplm-section-heading__description {\n    line-height: 1.6; }\n  .rplm-section-heading__icon {\n    display: inline-block;\n    fill: #000;\n    height: 32px;\n    margin-right: 24px;\n    width: 32px; }\n  .rplm-section-heading--inverse .rplm-section-heading__title {\n    border-color: #fff; }\n","@import '../rpl.tier-2';\n\nhtml {\n  font-family: $font-family-sans-serif;\n}\n\nbody {\n  @include typography-text-standard;\n  background-color: get-neutral-color('very-light-gray');\n  color: get-neutral-color('black');\n  min-width: $minimum-size-width;\n  width: 100%;\n}\n\na {\n  color: get-neutral-color('black');\n}\n\n//\n// Responsive image styling\n// 1) Allows for images to flex with varying screen size\n//\nimg {\n  height: auto;\n  max-width: 100%;\n}\n\n// end of file\n","//\n// Tier 1 variables\n//\n// The main purpose of tier 1 is to set out the values for single CSS properties concepts, such as font size and color.\n//\n// This file is, essentially, a bunch of enumerations and represent the very core building blocks of the visual system.\n//\n// The enumerations are deliberately a little obfuscates to avoid direct array access. Access should all go through\n// the specific accessor function and/or mixin provided for each.\n//\n//\n\n@function safe-map-get($map, $option) {\n  @if map-has-key($map, $option) {\n    @return map-get($map, $option);\n  } @else {\n    @error '#{$map} does not contain the key #{$option}';\n    @return null;\n  }\n}\n\n//\n// Font family\n//\n$font-family-sans-serif: akzidenz-grotesk, Arial, Helvetica, sans-serif;\n\n//\n// Colors\n//\n\n//\n// Function to get a brand color\n//\n@function get-brand-color($option: 'primary') {\n  $brand-colors: (\n    'primary': #fdc513,\n    'primary-tint-1': #ffd44b,\n    'primary-tint-2': #ffd960,\n  );\n\n  @if $option != 'all' {\n    @return safe-map-get($brand-colors, $option);\n  } @else {\n    @return $brand-colors;\n  }\n}\n\n// generates a JSON array of brand colors to be used by PatternLab\n$xxx-bc: export('dist/source/_patterns/00-subatoms/05-color/color-brand.json', get-brand-color('all'), (prefix: '{ \"color_brand\":', suffix: '}'));\n\n//\n// Function to get a neutral color\n//\n@function get-neutral-color($option: 'gray') {\n  $neutral-colors: (\n    'white': #fff,\n    'very-light-gray': #f6f6f6,\n    'light-gray': #e9e9e9,\n    'gray': #d1d1d1,\n    'dark-gray': #666,\n    'very-dark-gray': #383838,\n    'black': #000,\n  );\n  @if $option != 'all' {\n    @return safe-map-get($neutral-colors, $option);\n  } @else {\n    @return $neutral-colors;\n  }\n}\n\n// generates a JSON array of neutral colors to be used by PatternLab\n$xxx-nc: export('dist/source/_patterns/00-subatoms/05-color/color-neutral.json', get-neutral-color('all'), (prefix: '{ \"color_neutral\":', suffix: '}'));\n\n//\n// Function to get a utility color\n//\n@function get-utility-color($option: 'alert') {\n  $utility-colors: (\n    'alert': #ee2d14,\n  );\n  @if $option != 'all' {\n    @return safe-map-get($utility-colors, $option);\n  } @else {\n    @return $utility-colors;\n  }\n}\n// generates a JSON array of utility colors to be used by PatternLab\n$xxx-uc: export('dist/source/_patterns/00-subatoms/05-color/color-utility.json', get-utility-color('all'), (prefix: '{ \"color_utility\":', suffix: '}'));\n\n\n//\n// Font size\n//\n\n// Function to get a font size value from its array entry key\n@function get-font-size($option: 'm') {\n  // don't panic - these get converted to rem when they are returned\n  $font-sizes: (\n    'xxs': 12px,\n    'xs': 14px,\n    's': 16px,\n    'm': 18px,\n    'ml': 20px,\n    'l': 24px,\n    'xl': 28px,\n    'xxl': 36px,\n    'xxxl': 44px,\n    'xxxxl': 52px,\n    'xxxxxl': 60px,\n  );\n  @if $option != 'all' {\n    @return rem(safe-map-get($font-sizes, $option));\n  } @else {\n    @return $font-sizes;\n  }\n}\n\n//\n// Font size mixin\n//\n@mixin font-size($option: 'm') {\n  font-size: get-font-size($option);\n}\n\n// generates a JSON array of font sizes to be used by PatternLab\n$xxx-fs: export('dist/source/_patterns/00-subatoms/10-font-size/font-size.json', get-font-size('all'), (prefix: '{ \"font_size\":', suffix: '}'));\n\n//\n// Line height\n//\n\n// Function to get a line height value from its array entry key\n@function get-line-height($option: 'm') {\n  $line-heights: (\n    'xxs': 1,\n    'xs': 1.2,\n    's': 1.4,\n    'm': 1.6,\n    'l': 1.75,\n  );\n  @if $option != 'all' {\n    @return safe-map-get($line-heights, $option);\n  } @else {\n    @return $line-heights;\n  }\n}\n\n//\n// Line height mixin\n//\n@mixin line-height($option: 'm') {\n  line-height: get-line-height($option);\n}\n\n// generates a JSON array of line heights to be used by PatternLab\n$xxx-lh: export('dist/source/_patterns/00-subatoms/20-line-height/line-height.json', get-line-height('all'), (prefix: '{ \"line_height\":', suffix: '}'));\n\n//\n// Letter spacing\n//\n\n// Function to get a letter spacing value from its array entry key\n@function get-letter-spacing($option: 'm') {\n  $letter-spacings: (\n    'compact': -.03em,\n    'standard': -.01em,\n  );\n  @if $option != 'all' {\n    @return safe-map-get($letter-spacings, $option);\n  } @else {\n    @return $letter-spacings;\n  }\n}\n\n@mixin letter-spacing($option: 'standard') {\n  letter-spacing: get-letter-spacing($option);\n}\n\n// generates a JSON array of letter spacing to be used by PatternLab\n$xxx-ls: export('dist/source/_patterns/00-subatoms/15-letter-spacing/letter-spacing.json', get-letter-spacing('all'), (prefix: '{ \"letter_spacing\":', suffix: '}'));\n\n//\n// Font weight\n//\n\n// Function to get a font weight value from its array entry key\n@function get-font-weight($option: 'm') {\n  $font-weights: (\n    'light': 300,\n    'normal': 400,\n    'bold': 700,\n  );\n  @if $option != 'all' {\n    @return safe-map-get($font-weights, $option);\n  } @else {\n    @return $font-weights;\n  }\n}\n\n@mixin font-weight($option: 'normal') {\n  font-weight: get-font-weight($option);\n}\n\n// generates a JSON array of font sizes to be used by PatternLab\n$xxx-fw: export('dist/source/_patterns/00-subatoms/25-font-weight/font-weight.json', get-font-weight('all'), (prefix: '{ \"font_weight\":', suffix: '}'));\n\n// Function to get a spacing value from its array entry key\n@function get-spacing($option: 'm') {\n  // don't panic - these get converted to rem when they are returned\n  $space-unit: 16px;\n  $spacings: (\n    'xs': $space-unit / 4, // 4px\n    's': $space-unit / 2, // 8px\n    'm': $space-unit,  // 16px\n    'ml': 1.5 * $space-unit, // 24px\n    'l': 2 * $space-unit, // 32px\n    'xl': 3 * $space-unit, // 48px\n    'xxl': 4 * $space-unit, // 64px\n  );\n  @if $option != 'all' {\n    @return rem(safe-map-get($spacings, $option));\n  } @else {\n    @return $spacings;\n  }\n}\n// generates a JSON array of spacing to be used by PatternLab\n$xxx-spac: export('dist/source/_patterns/00-subatoms/30-spacing/spacing.json', get-spacing('all'), (prefix: '{ \"spacing\":', suffix: '}'));\n\n\n// end of file\n\n","// mixins\n// only create for really ubiquitous stuff\n// a rule-of-thumb would be 'does this feel like boilerplating' - if so, consider a mixin\n\n//\n// standard-row mixin\n//\n// Useful when an element needs to fit into our well.\n//\n// Note: We've inherited using padding rather than margin for the breathing space from rescue.org\n//\n@mixin standard-row {\n  margin-left: auto;\n  margin-right: auto;\n  max-width: $max-row-width;\n  padding-left: get-spacing();\n  padding-right: get-spacing();\n}\n\n//\n// breakpoint mixin\n//\n// A mixin to help with our most common media queries\n//\n// accepts:  desktop, laptop, tablet and phablet.\n//\n// mobile is not an option as our SCSS should be mobile-first\n//\n// you are encouraged to write your own media queries when you need to\n// do work outside of these common targets. if possible, use these variables when you\n// need to target a device in the broadest sense:\n//\n//    $smallest_phablet_size (start  of phablet)\n//    $smallest_tablet_size (start of tablet)\n//    $smallest_laptop_size (start of laptop)\n//    $smallest_desktop_size-width (start of desktop)\n//\n//\n@mixin breakpoint($point) {\n  @if $point == desktop {\n    @media only screen and (min-width: #{$smallest-desktop-size}) { @content ; }\n  } @else if $point == laptop {\n    @media only screen and (min-width: #{$smallest-laptop-size}) { @content ; }\n  } @else if $point == tablet {\n    @media only screen and (min-width: #{$smallest-tablet-size}) { @content ; }\n  } @else if $point == phablet {\n    @media only screen and (min-width: #{$smallest-phablet-size})  { @content ; }\n  }\n}\n\n\n// end of file\n","@import 'rpla-paragraph.variables';\n\n.rpla-paragraph {\n  @include typography-text-standard;\n  margin-bottom: get-spacing();\n  max-width: $max-text-width;\n\n  @include breakpoint(phablet) {\n    margin-bottom: get-spacing('ml');\n  }\n\n  &--lead {\n    @include typography-text-large;\n  }\n}\n\n// end of file\n","@import 'rpla-heading.variables';\n\n.rpla-heading {\n\n  &--medium {\n    @include typography-heading-medium;\n    margin-bottom: get-spacing('s');\n  }\n\n  &--medium-large {\n    @include typography-heading-medium-large;\n    margin-bottom: get-spacing();\n  }\n\n  &--large {\n    // TODO SOME MARGIN FOR THIS ONE\n    @include typography-heading-large;\n  }\n\n  &--extra-large {\n    @include typography-heading-extra-large;\n    margin-bottom: get-spacing();\n  }\n}\n\n// end of file\n","@import 'rpla-slug.variables';\n\n.rpla-slug {\n  $self: &;\n\n  @include typography-text-extra-small;\n\n  &:not(:last-child) {\n    margin-bottom: $slug-margin-bottom;\n  }\n\n  &__slug {\n    @include breakpoint(phablet) {\n      display: inline-block;\n    }\n  }\n\n  &__sub-slug {\n    @include font-weight('bold');\n    display: inline-block;\n\n    @include breakpoint(phablet) {\n      border-left: 1px solid get-neutral-color('black');\n      margin-left: $slug-sub-spacing;\n      padding-left: $slug-sub-spacing;\n      padding-right: $slug-sub-spacing;\n    }\n  }\n\n  &--size-large {\n    @include typography-text-standard;\n  }\n}\n\n// end of file\n","@import 'rpla-button.variables';\n\n.rpla-button {\n  $self: &;\n\n  background-color: $button-background-color;\n  display: inline-flex;\n  text-decoration: none;\n\n  &__icon {\n    height: 24px; // temp\n    width: 24px; // temp\n  }\n\n  &--icon-position-before {\n    #{$self}__text {\n      order: 2;\n    }\n  }\n}\n","@import 'rpla-link.variables';\n\n.rpla-link {\n  $self: &;\n\n  //\n  // 1) We need this style of selector because we are trying to do a wildcard check for any class containing rpla-link--style-\n  //\n  &:not([class*='rpla-link--style-']) { // 1)\n    //\n    // 1) Ensures that we get the default hover effect only when the hover effect is not turned off\n    // 2) Ensures we get no hover effect is we are the no-hover effect option.\n    //\n    &:not(#{$self}--hover-effect-none) {\n      @include typography-link-standard; // 1\n    }\n\n    &#{$self}--hover-effect-none {\n      @include typography-link-standard (false); // 2\n    }\n\n  }\n\n  &--style-alert {\n    @include typography-link-alert;\n  }\n\n  &--style-inverse {\n    @include typography-link-inverse;\n  }\n\n  &--size-extra-small {\n    @include typography-text-extra-small;\n  }\n\n}\n","//\n// Tier 2 variables\n//\n\n@import 'rpl.tier-1';\n@import 'abstract/mixins';\n\n@function is-not-in-list ($list, $value) {\n  @return index($list, $value) == null;\n}\n\n@mixin typography-text-extra-extra-small {\n  @include font-size('xxs');\n  @include font-weight('light');\n  @include line-height('xxs');\n\n  @include breakpoint(phablet) {\n    @include font-size('xs');\n  }\n}\n\n@mixin typography-text-extra-small {\n  @include font-size('xs');\n  @include font-weight('light');\n  @include line-height('s');\n\n  @include breakpoint(phablet) {\n    @include font-size('s');\n  }\n}\n\n// internal function for small text mixin parameters\n@function xxx-tts-params ($option: 'keys') {\n  $typography-text-small-params: (\n    'm': 'Default value, up-sized to medium',\n    //'ml': 'Up-sizes to medium-large on non-mobile devices',\n    //'s': 'Prevents up-sizing by maintaining small font size on all devices',\n  );\n\n  @if $option != 'all' {\n    @return map-keys($typography-text-small-params);\n  } @else {\n    @return $typography-text-small-params;\n  }\n}\n\n//\n// Small text mixin. Outputs with a small (s) font size on mobile and a medium  on other devices\n//\n// The responds arguments allows some control over the up-sizing on non-mobile devices.\n// Options:\n//    m   Default value, up-sized to medium\n//    ml  Up-sizes to medium-large on non-mobile devices\n//    s   Prevents up-sizing by maintaining small font size on all devices\n//\n@mixin typography-text-small ($responds: 'm') {\n  @if is-not-in-list(xxx-tts-params(), $responds) { // sass-lint:disable-line empty-args\n    @error '#{$responds} is not a legitimate parameter';\n  }\n\n  $mobile-font-size: 's';\n  @include font-size($mobile-font-size);\n  @include font-weight('light');\n  @include line-height('s');\n\n  @if $responds != $mobile-font-size {\n    @include breakpoint(phablet) {\n      @include font-size($responds);\n    }\n  }\n}\n// generates a JSON array of typography-text-small paarameters to be used by PatternLab\n$xxx-tts: export('dist/source/_patterns/00-subatoms/50-tier-2-mixins/typography-text-small.json', xxx-tts-params('all'), (prefix: '{ \"typography_text_small\":', suffix: '}'));\n\n\n@mixin typography-text-standard {\n  @include font-size('m');\n  @include font-weight('light');\n  @include letter-spacing('standard');\n  @include line-height('m');\n\n  @include breakpoint(phablet) {\n    @include font-size('ml');\n    @include line-height('l');\n  }\n}\n\n@mixin typography-text-large ($responds: 'l') {\n  @include font-size('ml');\n\n  @include breakpoint(phablet) {\n    @include font-size('l');\n    @include line-height('m');\n  }\n}\n\n@mixin typography-link-standard-hover {\n  background-color: get-brand-color();\n}\n\n@mixin typography-link-standard ($has-hover-effect: true) {\n  @include font-weight('bold');\n  border-bottom: 2px solid get-brand-color('primary');\n  display: inline;\n\n  @if $has-hover-effect {\n    &:hover {\n      @include typography-link-standard-hover;\n    }\n  }\n}\n\n@mixin typography-link-alert {\n  @include font-weight('bold');\n  border-bottom: 2px solid get-utility-color('alert');\n  display: inline;\n\n  &:hover {\n    color: get-utility-color('alert');\n  }\n}\n\n@mixin typography-link-inverse-hover {\n  background-color: get-neutral-color('white');\n}\n\n@mixin typography-link-inverse {\n  @include font-weight('bold');\n  border-bottom: 2px solid get-neutral-color('white');\n  display: inline;\n\n  &:hover {\n    @include typography-link-inverse-hover;\n  }\n}\n\n// Medium  on mobile, Medium large on bigger devices\n@mixin typography-heading-medium {\n  @include font-size('m');\n  @include font-weight('bold');\n  @include letter-spacing('compact');\n  @include line-height('s');\n\n  @include breakpoint(phablet) {\n    @include font-size('ml');\n  }\n}\n\n// Medium large on mobile, Extra large on bigger devices\n@mixin typography-heading-medium-large  {\n  @include font-size('ml');\n  @include font-weight('bold');\n  @include letter-spacing('compact');\n  @include line-height('s');\n\n  @include breakpoint(phablet) {\n    @include font-size('xl');\n  }\n}\n\n// Large on mobile, Extra extra large on bigger devices\n@mixin typography-heading-large {\n  @include font-size('l');\n  @include font-weight('bold');\n  @include letter-spacing('compact');\n  @include line-height('s');\n\n  @include breakpoint(phablet) {\n    @include font-size('xxl');\n  }\n}\n\n// Extra large on mobile, Extra extra large on bigger devices\n@mixin typography-heading-extra-large {\n  @include font-size('xl');\n  @include font-weight('bold');\n  @include letter-spacing('compact');\n  @include line-height('s');\n\n  @include breakpoint(phablet) {\n    @include font-size('xxl');\n  }\n}\n\n// end of file\n","@import 'rpla-link-icon.variables';\n\n.rpla-link-icon {\n  $self: &;\n\n  text-decoration: none;\n\n  &__icon {\n    height: 24px; // temp\n    width: 24px; // temp\n  }\n}\n","@import 'rpla-unordered-list.variables';\n\n.rpla-unordered-list {\n\n  @include typography-text-standard;\n  list-style: none;\n\n  &--small {\n    @include typography-text-small;\n  }\n\n  &__item {\n    margin-bottom: get-spacing();\n    padding-left: get-spacing('l');\n    text-indent: -.85em;\n\n    &::before {\n      @include font-size('l');\n      color: get-brand-color();\n      content: 'â€¢ ';\n      font-family: Arial;\n      left: -#{get-spacing()};\n      position: relative;\n      top: 3px;\n    }\n  }\n\n}\n\n\n// end of file\n","@import 'rpla-responsive-title.variables';\n\n.rpla-responsive-title {\n\n  @include typography-heading-large;\n  margin-bottom: get-spacing();\n\n  @media only screen and (min-width: #{981px}) {\n    @include line-height('xs');\n\n    &--short {\n      @include font-size('xxxxxl');\n    }\n\n    &--medium,\n    &--long {\n      @include font-size('xxxxl');\n    }\n\n    &--very-long {\n      @include font-size('xxxl');\n    }\n\n    &--super-long {\n      @include font-size('xxl');\n    }\n  }\n}\n\n// end of file\n\n\n","@import 'rpla-icon.variables';\n\n.rpla-icon {\n  height: 100%;\n  width: 100%;\n}\n\n// end of file\n","@import 'rpla-social-share-default.variables';\n\n.rpla-social-share-standard {\n  &__link {\n    border: 1px solid get-neutral-color('light-gray');\n    border-radius: 100%;\n    display: inline-block;\n    height: $social-share-standard-width-height;\n    margin-right: $social-share-standard-gutter;\n    padding: $social-share-standard-padding-around-icon;\n    width: $social-share-standard-width-height;\n  }\n}\n\n// end of file\n","@import 'rplm-section-heading.variables';\n\n.rplm-section-heading {\n  $self: &;\n\n  @include standard-row;\n\n\n  //\n  // 1) Ensures that the icon does not get too squished\n  //\n  &__title {\n    @include typography-heading-large;\n    border-left: $section-heading-left-border-width solid get-brand-color();\n    display: inline-block;\n    max-width: 75%; // 1\n    padding-bottom: get-spacing('s');\n    padding-left: $section-heading-title-left-padding;\n    padding-top: get-spacing('s');\n\n    @include breakpoint(phablet) {\n      max-width: 85%;\n    }\n  }\n\n  &__title-icon-wrapper {\n    align-items: center;\n    display: flex;\n    margin-bottom: get-spacing();\n\n    @include breakpoint(phablet) {\n      margin-bottom: get-spacing('ml');\n    }\n  }\n\n  &__description {\n    @include line-height('m');\n  }\n\n  &__icon {\n    display: inline-block;\n    fill: get-neutral-color('black');\n    height: 32px;\n    margin-right: 24px;\n    width: 32px;\n  }\n\n  &--inverse {\n    #{ $self }__title {\n      border-color: $section-heading-inverse-left-border-color;\n    }\n  }\n}\n\n// end of file\n\n"]}