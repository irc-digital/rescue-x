@import 'rplc-pull-quote.variables';

// if no modifier is used the quote should be full width
.rplc-pull-quote {
  $self: &;

  background-color: $pull-quote-background-color;
  margin-top: $embeddable-top-margin;
  width: 100%;

  &__content {
    margin-left: auto;
    margin-right: auto;
    max-width: $well-width-inner;
  }

  &__icon-wrapper {
    height: safe-map-get($pull-quote-icon-size, 'mobile');
    margin-bottom: get-spacing();
    width: safe-map-get($pull-quote-icon-size, 'mobile');

    //
    // 1) May look a little odd, but the desktop size is used on phablet unless we are the left/right version
    //
    @include breakpoint(phablet) {
      flex-shrink: 0;
      height: safe-map-get($pull-quote-icon-size, 'desktop'); // 1
      margin-bottom: 0;
      margin-right: safe-map-get($pull-quote-icon-right-margin, 'desktop'); // 1
      width: safe-map-get($pull-quote-icon-size, 'desktop'); // 1
    }
  }

  &__text-wrapper {
    display: flex;
    flex-direction: column;
    height: auto;
    margin-left: auto;
    margin-right: auto;
    padding: safe-map-get($pull-quote-text-padding, 'mobile');
    position: relative;

    @include breakpoint(phablet) {
      flex-direction: row;
      padding: safe-map-get($pull-quote-text-padding, 'phablet');
    }
  }

  &__text {
    @include typography-text-large;
    @include font-style('italic');
    position: relative;
  }

  &--placement-left,
  &--placement-right {
    #{ $self }__text-wrapper {
      background-color: $pull-quote-background-color;
      margin: 0;

      @include breakpoint(phablet) {
        max-width: rem(450px);
      }

      @media only screen and (min-width: #{$pull-quote-large-screen-breakpoint}) {
        max-width: rem(550px);
      }
    }

    #{ $self }__icon-wrapper {
      @include breakpoint(phablet) {
        height: safe-map-get($pull-quote-icon-size, 'phablet');
        margin-right: safe-map-get($pull-quote-icon-right-margin, 'phablet');
        width: safe-map-get($pull-quote-icon-size, 'phablet');
      }

      @media only screen and (min-width: #{$pull-quote-large-screen-breakpoint}) {
        height: safe-map-get($pull-quote-icon-size, 'desktop');
        margin-right: safe-map-get($pull-quote-icon-right-margin, 'desktop');
        width: safe-map-get($pull-quote-icon-size, 'desktop');
      }
    }

  }

  &--placement-left {

    @include breakpoint(phablet) {
      #{ $self }__text-wrapper {
        float: left;
        margin-right: rem(140px);
      }
    }
  }

  &--placement-right {

    @include breakpoint(phablet) {
      #{ $self }__text-wrapper {
        float: right;
        margin-left: get-spacing('xl');
      }

      @include breakpoint(desktop) {
        #{ $self }__text-wrapper {
          margin-left: -#{rem(90px)};
        }
      }
    }
  }

  &--background-transparent {
    background-color: transparent;
  }
}

// end of file
