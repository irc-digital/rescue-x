@import 'rplc-pull-quote.variables';

// if no modifier is used the quote should be full width
.rplc-pull-quote {
  $self: &;

  background-color: $pull-quote-background-color;
  width: 100%;

  &__icon-wrapper {
    height: safe-map-get($pull-quote-icon-size, 'mobile');
    margin-bottom: get-spacing();
    width: safe-map-get($pull-quote-icon-size, 'mobile');

    //
    // 1) May look a little odd, but the desktop size is used on phablet unless we are the left/right version
    //
    @include breakpoint(phablet) {
      flex-shrink: 0;
      height: safe-map-get($pull-quote-icon-size, 'desktop'); // 1
      margin-bottom: 0;
      margin-right: safe-map-get($pull-quote-icon-right-margin, 'desktop'); // 1
      width: safe-map-get($pull-quote-icon-size, 'desktop'); // 1
    }
  }

  &__text-wrapper {
    display: flex;
    flex-direction: column;
    height: auto;
    margin-left: auto;
    margin-right: auto;
    padding: safe-map-get($pull-quote-text-padding, 'mobile');
    position: relative;

    @include breakpoint(phablet) {
      flex-direction: row;
      padding: safe-map-get($pull-quote-text-padding, 'phablet');
    }
  }

  &__text {
    @include typography-text-large;
    @include font-style('italic');
    position: relative;
  }

  &--background-transparent {
    background-color: transparent;
  }

  &--position-right,
  &--position-left {
    #{$self}__content {
      margin-left: auto;
      margin-right: auto;
      max-width: $well-width-inner;
    }
  }

  // sass-lint:disable-block force-pseudo-nesting
  &:not(&--position-right):not(&--position-left) {
    @include standard-vertical-padding;

    #{$self}__content {
      @include body-text-row;
      @include breakpoint(951) {
        left: 0;
        max-width: rem(868px);
      }
    }

    #{$self}__text-wrapper {
      @include breakpoint(phablet) {
        padding-left: 0;
        padding-right: 0;
      }
    }
  }
}

// end of file
