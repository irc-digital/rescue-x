//
// Tier 2 variables
//

@import 'x.tier-1';
@import 'abstract/mixins';

@function is-not-in-list ($list, $value) {
  @return index($list, $value) == null;
}

@mixin typography-text-extra-small {
  @include font-size('xs');

  @include breakpoint(phablet) {
    @include font-size('s');
  }
}

//
// Small text mixin. Outputs with a small (s) font size on mobile and a medium  on other devices
//
// The responds arguments allows some control over the up-sizing on non-mobile devices.
// Options:
//    m   Default value, up-sized to medium
//    ml  Up-sizes to medium-large on non-mobile devices
//    s   Prevents up-sizing by maintaining small font size on all devices
//
@mixin typography-text-small ($responds: 'm') {
  @if is-not-in-list(('m', 'ml', 's'), $responds) {
    @error '#{$responds} is not a legitimate parameter';
  }

  $mobile-font-size: 's';
  @include font-size($mobile-font-size);
  @include font-weight('light');

  @if $responds != $mobile-font-size {
    @include breakpoint(phablet) {
      @include font-size($responds);
    }
  }
}

@mixin typography-text-standard {
  @include font-size('m');
  @include font-weight('light');
  @include letter-spacing('standard');
  @include line-height('m');

  @include breakpoint(phablet) {
    @include font-size('ml');
    @include line-height('m-1');
  }
}

@mixin typography-text-large ($responds: 'l') {
  @include font-size('ml');

  @include breakpoint(phablet) {
    @include font-size('l');
    @include line-height('m');
  }
}

@mixin typography-link-standard-hover {
  background-color: get-brand-color();
}

@mixin typography-link-standard {
  @include font-weight('bold');
  border-bottom: 2px solid get-brand-color();
  display: inline;

  &:hover {
    @include typography-link-standard-hover;
  }
}

@mixin typography-link-alert {
  @include font-weight('bold');
  border-bottom: 2px solid get-utility-color('alert');
  display: inline;

  &:hover {
    color: get-utility-color('alert');
  }
}

@mixin typography-link-inverse-hover {
  background-color: get-neutral-color('white');
}

@mixin typography-link-inverse {
  @include font-weight('bold');
  border-bottom: 2px solid get-neutral-color('white');
  display: inline;

  &:hover {
    @include typography-link-inverse-hover;
  }
}

// Medium large on mobile, Extra large on bigger devices
//
// The responds arguments allows some control over the up-sizing on non-mobile devices.
// Options:
//    xl   Default value, up-sized to extra large
//    ml   Prevents up-sizing by maintaining medium-large on all devices
//
@mixin typography-heading-medium-large ($responds: 'xl') {
  @if is-not-in-list(('xl', 'ml'), $responds) {
    @error '#{$responds} is not a legitimate parameter';
  }

  $mobile-font-size: 'ml';
  @include font-size($mobile-font-size);
  @include font-weight('bold');
  @include letter-spacing('compact');
  @include line-height('s-1');

  @if $responds != $mobile-font-size {
    @include breakpoint(phablet) {
      @include font-size($responds);
    }
  }
}

// Large on mobile, Extra extra large on bigger devices
@mixin typography-heading-large {
  @include font-size('l');
  @include font-weight('bold');
  @include letter-spacing('compact');
  @include line-height('s-1');

  @include breakpoint(phablet) {
    @include font-size('xxl');
  }
}

// Extra large on mobile, Extra extra large on bigger devices
@mixin typography-heading-extra-large {
  @include font-size('xl');
  @include font-weight('bold');
  @include letter-spacing('compact');
  @include line-height('s-1');

  @include breakpoint(phablet) {
    @include font-size('xxl');
  }
}

// end of file
