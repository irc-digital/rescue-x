//
// Tier 1 variables
//
// The main purpose of tier 1 is to set out the values for single CSS properties concepts, such as font size and color.
//
// This file is, essentially, a bunch of enumerations and represent the very core building blocks of the visual system.
//
// The enumerations are deliberately a little obfuscates to avoid direct array access. Access should all go through
// the specific accessor function or mixin provided for each.
//
//
//

@function safe-map-get($map, $option) {
  @if map-has-key($map, $option) {
    @return map-get($map, $option);
  } @else {
    @error '#{$map} does not contain the key #{$option}';
    @return null;
  }
}

//
// Font family
//
$font-family-sans-serif: akzidenz-grotesk, Arial, Helvetica, sans-serif;

//
// Colors
//

// private function containing brand colors
@function xxx-private-bc() {
  // sass-lint:disable-block indentation
  @return (
    'primary': #fdc513,
    'primary-tint-1': #ffd44b,
    'primary-tint-2': #ffd960,
  );
}

//
// Function to get a brand color
//
@function get-brand-color($option: 'primary') {
  @return safe-map-get(xxx-private-bc(), $option);
}

// generates a JSON array of brand colors to be used by PatternLab
$xxx-bc: export('dist/source/_patterns/00-subatoms/05-color/color-brand.json', xxx-private-bc(), (prefix: '{ "color_brand":', suffix: '}'));

// private function containing neutral colors
@function xxx-private-nc() {
  // sass-lint:disable-block no-color-keywords indentation
  @return (
    'white': #fff,
    'very-light-gray': #f6f6f6,
    'light-gray': #e9e9e9,
    'gray': #d1d1d1,
    'dark-gray': #666,
    'very-dark-gray': #383838,
    'black': #000,
  );
}

//
// Function to get a neutral color
//
@function get-neutral-color($option: 'gray') {
  @return safe-map-get(xxx-private-nc(), $option);
}
// generates a JSON array of neutral colors to be used by PatternLab
$xxx-nc: export('dist/source/_patterns/00-subatoms/05-color/color-neutral.json', xxx-private-nc(), (prefix: '{ "color_neutral":', suffix: '}'));

// private function containing utility colors
@function xxx-private-uc() {
  // sass-lint:disable-block indentation
  @return (
    'alert': #ee2d14,
  );
}

//
// Function to get a utility color
//
@function get-utility-color($option: 'alert') {
  @return safe-map-get(xxx-private-uc(), $option);
}
// generates a JSON array of utility colors to be used by PatternLab
$xxx-uc: export('dist/source/_patterns/00-subatoms/05-color/color-utility.json', xxx-private-uc(), (prefix: '{ "color_utility":', suffix: '}'));


//
// Font size
//

// private function containing font sizes
@function xxx-private-fs() {
  // sass-lint:disable-block indentation
  @return (
    'm': rem(18px),
    'm-1': rem(20px),
    'l': rem(26px),
    'l-1': rem(36px),
  );
}

//
// Font size mixin
//
@mixin font-size($option: 'm') {
  // sass-lint:disable-block empty-args
  font-size: safe-map-get(xxx-private-fs(), $option);
}

// generates a JSON array of font sizes to be used by PatternLab
$xxx-fs: export('dist/source/_patterns/00-subatoms/10-font-size/font-size.json', xxx-private-fs(), (prefix: '{ "font_size":', suffix: '}'));

//
// Line height
//

// private function containing line heights
@function xxx-private-lh() {
  // sass-lint:disable-block indentation
  @return (
    's': 1,
    's-1': 1.2,
    'm': 1.6,
    'm-1': 1.75,
  );
}

//
// Line height mixin
//
@mixin line-height($option: 'm') {
  // sass-lint:disable-block empty-args
  line-height: safe-map-get(xxx-private-lh(), $option);
}

// generates a JSON array of line heights to be used by PatternLab
$xxx-lh: export('dist/source/_patterns/00-subatoms/20-line-height/line-height.json', xxx-private-lh(), (prefix: '{ "line_height":', suffix: '}'));

//
// Letter spacing
//

// private function containing letter spacings
@function xxx-private-ls() {
  // sass-lint:disable-block indentation
  @return (
    'compact': -.03em,
    'standard': -.01em,
  );
}

@mixin letter-spacing($option: 'standard') {
  // sass-lint:disable-block empty-args
  letter-spacing: safe-map-get(xxx-private-ls(), $option);
}

// generates a JSON array of letter spacing to be used by PatternLab
$xxx-ls: export('dist/source/_patterns/00-subatoms/15-letter-spacing/letter-spacing.json', xxx-private-ls(), (prefix: '{ "letter_spacing":', suffix: '}'));

//
// Font weight
//

// private function containing font sizes
@function xxx-private-fw() {
  // sass-lint:disable-block indentation
  @return (
    'light': 300,
    'normal': 400,
    'bold': 700,
  );
}

@mixin font-weight($option: 'normal') {
  // sass-lint:disable-block empty-args
  font-weight: safe-map-get(xxx-private-fw(), $option);
}

// generates a JSON array of font sizes to be used by PatternLab
$xxx-fw: export('dist/source/_patterns/00-subatoms/25-font-weight/font-weight.json', xxx-private-fw(), (prefix: '{ "font_weight":', suffix: '}'));


// end of file

