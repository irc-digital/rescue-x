// mixins
// only create for really ubiquitous stuff
// a rule-of-thumb would be 'does this feel like boilerplating' - if so, consider a mixin

//
// standard-row mixin
//
// Useful when an element needs to fit into our well.
//
// Note: We've inherited using padding rather than margin for the breathing space from rescue.org
//
@mixin standard-row ($no-padding: false) {
  margin-left: auto;
  margin-right: auto;
  max-width: $max-row-width;

  @if not $no-padding {
    padding-left: get-spacing('m');
    padding-right: get-spacing('m');
  }
}

@mixin standard-vertical-spacing ($airy: false) {
  $spacing: 'standard';

  @if $airy {
    $spacing: 'airy';
  }

  $spacing-map: safe-map-get($vertical-spacing, $spacing);

  margin-bottom: safe-map-get($spacing-map, 'mobile');

  @include breakpoint(phablet) {
    margin-bottom: safe-map-get($spacing-map, 'phablet');
  }
}

@mixin standard-vertical-padding {

  padding-bottom: get-spacing('m');
  padding-top: get-spacing('m');

  @include breakpoint(phablet) {
    padding-bottom: get-spacing('l');
    padding-top: get-spacing('l');
  }
}

//
// breakpoint mixin
//
// A mixin to help with our most common media queries
//
// accepts:  desktop, laptop, 950, tablet and phablet.
//
// 951 is a slightly odd case where it does not map onto a common device, but our design changes a bunch
// of stuff at that point - think of it as a magic number for the rescue.org design
//
// mobile is not an option as our SCSS should be mobile-first
//
// you are encouraged to write your own media queries when you need to
// do work outside of these common targets. if possible, use these variables when you
// need to target a device in the broadest sense:
//
//    $smallest_phablet_size (start  of phablet)
//    $smallest_tablet_size (start of tablet)
//    $smallest_laptop_size (start of laptop)
//    $smallest_desktop_size-width (start of desktop)
//
//
@mixin breakpoint($point) {
  @if $point == desktop {
    @media only screen and (min-width: #{$smallest-desktop-size}) { @content ; }
  } @else if $point == laptop {
    @media only screen and (min-width: #{$smallest-laptop-size}) { @content ; }
  } @else if $point == 951 {
    @media only screen and (min-width: rem(951px)) { @content ; }
  } @else if $point == tablet {
    @media only screen and (min-width: #{$smallest-tablet-size}) { @content ; }
  } @else if $point == phablet {
    @media only screen and (min-width: #{$smallest-phablet-size})  { @content ; }
  }
}

// end of file
