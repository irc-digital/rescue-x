//
// Tier 2 variables
//

@import 'rpl.tier-1';
@import 'abstract/mixins';

@function is-not-in-list ($list, $value) {
  @return index($list, $value) == null;
}

@mixin typography-text-extra-extra-small {
  @include font-size('xxs');
  @include font-weight('light');
  @include line-height('xxs');

  @include breakpoint(phablet) {
    @include font-size('xs');
  }
}

@mixin typography-text-extra-small {
  @include font-size('xs');
  @include font-weight('light');
  @include line-height('s');

  @include breakpoint(phablet) {
    @include font-size('s');
  }
}

// internal function for small text mixin parameters
@function xxx-tts-params ($option: 'keys') {
  $typography-text-small-params: (
    'm': 'Default value, up-sized to medium',
    'ml': 'Up-sizes to medium-large on non-mobile devices',
    //'s': 'Prevents up-sizing by maintaining small font size on all devices',
  );

  @if $option != 'all' {
    @return map-keys($typography-text-small-params);
  } @else {
    @return $typography-text-small-params;
  }
}

//
// Small text mixin. Outputs with a small (s) font size on mobile and a medium  on other devices
//
// The responds arguments allows some control over the up-sizing on non-mobile devices.
// Options:
//    m   Default value, up-sized to medium
//    ml  Up-sizes to medium-large on non-mobile devices
//    s   Prevents up-sizing by maintaining small font size on all devices
//
@mixin typography-text-small ($responds: 'm') {
  @if is-not-in-list(xxx-tts-params(), $responds) { // sass-lint:disable-line empty-args
    @error '#{$responds} is not a legitimate parameter';
  }

  $mobile-font-size: 's';
  @include font-size($mobile-font-size);
  @include font-weight('light');
  @include line-height('s');

  @if $responds != $mobile-font-size {
    @include breakpoint(phablet) {
      @include font-size($responds);
    }
  }
}
// generates a JSON array of typography-text-small paarameters to be used by PatternLab
$xxx-tts: export('dist/source/_patterns/00-subatoms/50-tier-2-mixins/typography-text-small.json', xxx-tts-params('all'), (prefix: '{ "typography_text_small":', suffix: '}'));


@mixin typography-text-standard {
  @include font-size('m');
  @include font-weight('light');
  @include letter-spacing('standard');
  @include line-height('m');

  @include breakpoint(phablet) {
    @include font-size('ml');
    @include line-height('l');
  }
}

@mixin typography-text-large ($responds: 'l') {
  @include font-size('ml');

  @include breakpoint(phablet) {
    @include font-size('l');
    @include line-height('m');
  }
}

@mixin typography-link-standard-hover {
  background-color: get-brand-color();
}

@mixin typography-link-standard ($has-hover-effect: true) {
  @include font-weight('bold');
  border-bottom: 2px solid get-brand-color('primary');
  display: inline;

  @if $has-hover-effect {
    &:hover {
      @include typography-link-standard-hover;
    }
  }
}

@mixin typography-link-alert {
  @include font-weight('bold');
  border-bottom: 2px solid get-utility-color('alert');
  display: inline;

  &:hover {
    color: get-utility-color('alert');
  }
}

@mixin typography-link-inverse-hover {
  background-color: get-neutral-color('white');
}

@mixin typography-link-inverse {
  @include font-weight('bold');
  border-bottom: 2px solid get-neutral-color('white');
  display: inline;

  &:hover {
    @include typography-link-inverse-hover;
  }
}

// Medium  on mobile, Medium large on bigger devices
@mixin typography-heading-medium {
  @include font-size('m');
  @include font-weight('bold');
  @include letter-spacing('compact');
  @include line-height('s');

  @include breakpoint(phablet) {
    @include font-size('ml');
  }
}

// Medium large on mobile, Extra large on bigger devices
@mixin typography-heading-medium-large  {
  @include font-size('ml');
  @include font-weight('bold');
  @include letter-spacing('compact');
  @include line-height('s');

  @include breakpoint(phablet) {
    @include font-size('xl');
  }
}

// Large on mobile, Extra extra large on bigger devices
@mixin typography-heading-large {
  @include font-size('l');
  @include font-weight('bold');
  @include letter-spacing('compact');
  @include line-height('s');

  @include breakpoint(phablet) {
    @include font-size('xxl');
  }
}

// Extra large on mobile, Extra extra large on bigger devices
@mixin typography-heading-extra-large {
  @include font-size('xl');
  @include font-weight('bold');
  @include letter-spacing('compact');
  @include line-height('s');

  @include breakpoint(phablet) {
    @include font-size('xxl');
  }
}

// Extra large light on mobile, Extra extra large on bigger devices (light)
@mixin typography-heading-extra-large-light {
  @include font-size('xl');
  @include font-weight('light');
  @include letter-spacing;
  @include line-height('xs');

  @include breakpoint(phablet) {
    @include font-size('xxl');
  }
}

// end of file
